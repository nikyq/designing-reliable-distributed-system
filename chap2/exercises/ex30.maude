fmod MSET-INT is
    protecting INT .

    sorts Mset NeMset .

    subsorts Int < NeMset < Mset .

    op none : -> Mset [ctor] .
    op __ : Mset Mset -> Mset [ctor assoc comm id: none] .
    op __ : NeMset NeMset -> NeMset [ctor assoc comm id: none] .
    
    op size : Mset -> Nat .
    op mult : Int Mset -> Nat .
    op delete : Int Mset -> Mset .
    op _in_ : Int Mset -> Bool .
    op max : NeMset -> Int .
    op _>mul_ : Mset Mset -> Bool .
    op empty? : Mset -> Bool .

    vars I I' : Int .
    vars MS MS' : Mset . 

    eq delete(I, I MS) = MS .
    ceq delete(I, MS) = MS if not I in MS .

    eq I in MS = mult(I, MS) > 0 .

    eq size(none) = 0 .
    eq size(I MS) = 1 + size(MS) .

    eq mult(I, none) = 0 .
    eq mult(I, I MS) = 1 + mult(I, MS) .
    ceq mult(I, I' MS) = mult(I, MS) if I =/= I' .

    eq max(I) = I .
    eq max(I MS) = max(I, max(MS)) .

    eq empty?(none) = true .
    eq empty?(I MS) = false .

    eq (I MS) >mul (I MS') = MS >mul MS' .
    eq (I MS) >mul none = true .
    eq none >mul (I' MS') = false .
    ceq (I MS) >mul (I' MS') = max(I MS) > max(I' MS') if max(I MS) =/= max(I' MS') .

endfm
