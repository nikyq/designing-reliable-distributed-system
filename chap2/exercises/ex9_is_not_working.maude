set include BOOL off .

fmod NAT-ADD is
    sort Nat .
    op 0 : -> Nat [ctor] .
    op s : Nat -> Nat [ctor] .
    op _+_ : Nat Nat -> Nat .

    vars M N : Nat .

    --- Define the addition function recursively:
    eq 0 + M = M .
    eq s(M) + N = s(M + N) .
endfm

fmod BOOLEAN is
    sort Boolean .
    ops t f : -> Boolean [ctor] .
    op not_ : Boolean -> Boolean [prec 53] .
    op _and_ : Boolean Boolean -> Boolean [prec 55] .
    op _or_ : Boolean Boolean -> Boolean [prec 59] .

    var B : Boolean .

    eq not f = t .
    eq not t = f .

    eq t and B = B .
    eq f and B = f .

    eq t or B = t .
    eq f or B = B .
endfm

